{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4000/api';\n\n// Create axios instance with defaults\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth APIs\nexport const register = async formData => {\n  try {\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\n// Ride APIs\nexport const searchRides = async params => {\n  try {\n    const response = await api.get('/rides/search', {\n      params\n    });\n    return response.data.rides || [];\n  } catch (error) {\n    throw handleError(error);\n  }\n};\nexport const createRide = async rideData => {\n  try {\n    const response = await api.post('/rides', rideData);\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\nexport const joinRide = async rideId => {\n  try {\n    const response = await api.post(`/rides/join/${rideId}`);\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\nexport const getUserRides = async () => {\n  try {\n    const response = await api.get('/rides/myrides');\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\nexport const acceptRideRequest = async (rideId, userId) => {\n  try {\n    const response = await api.post(`/rides/accept/${rideId}`, {\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\nexport const rejectRideRequest = async (rideId, userId) => {\n  try {\n    const response = await api.post(`/rides/reject/${rideId}`, {\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\n// Error handler\nconst handleError = error => {\n  var _error$response2, _error$response3, _error$response$data;\n  console.error('API Error:', {\n    message: error.message,\n    response: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status\n  });\n  if (error.code === 'ECONNABORTED') {\n    return new Error('Request timeout. Please try again.');\n  }\n  if (!error.response) {\n    return new Error('Network error. Please check your connection.');\n  }\n  const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Something went wrong. Please try again.';\n  const customError = new Error(message);\n  customError.status = error.response.status;\n  return customError;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","register","formData","data","handleError","searchRides","params","get","rides","createRide","rideData","post","joinRide","rideId","getUserRides","acceptRideRequest","userId","rejectRideRequest","_error$response2","_error$response3","_error$response$data","console","message","code","Error","customError"],"sources":["/Users/tanishkchaudhary/Documents/carpool/carpooling-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:4000/api';\n\n// Create axios instance with defaults\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth APIs\nexport const register = async (formData) => {\n  try {\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\n// Ride APIs\nexport const searchRides = async (params) => {\n  try {\n    const response = await api.get('/rides/search', { params });\n    return response.data.rides || [];\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\nexport const createRide = async (rideData) => {\n  try {\n    const response = await api.post('/rides', rideData);\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\nexport const joinRide = async (rideId) => {\n  try {\n    const response = await api.post(`/rides/join/${rideId}`);\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\nexport const getUserRides = async () => {\n  try {\n    const response = await api.get('/rides/myrides');\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\nexport const acceptRideRequest = async (rideId, userId) => {\n  try {\n    const response = await api.post(`/rides/accept/${rideId}`, { userId });\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\nexport const rejectRideRequest = async (rideId, userId) => {\n  try {\n    const response = await api.post(`/rides/reject/${rideId}`, { userId });\n    return response.data;\n  } catch (error) {\n    throw handleError(error);\n  }\n};\n\n// Error handler\nconst handleError = (error) => {\n  console.error('API Error:', {\n    message: error.message,\n    response: error.response?.data,\n    status: error.response?.status\n  });\n\n  if (error.code === 'ECONNABORTED') {\n    return new Error('Request timeout. Please try again.');\n  }\n\n  if (!error.response) {\n    return new Error('Network error. Please check your connection.');\n  }\n\n  const message = error.response.data?.message || 'Something went wrong. Please try again.';\n  const customError = new Error(message);\n  customError.status = error.response.status;\n  return customError;\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}